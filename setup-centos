#!/bin/bash

set -e

print_usage() {
    echo "Usage: $(basename "$0") [OPTIONS]"
    echo ""
    echo "Options:"
    echo "  --env-file FILE         Load environment variables from FILE"
    echo "  -h, --help              Show this help message and exit"
    echo ""
    echo "Environment Variables (can be set in env-file or directly):"
    echo "  NEW_USER                Name of the new user to create"
    echo "  NEW_USER_SSH_KEY        SSH public key for the new user"
    echo "  NEW_HOSTNAME            Hostname to set for the system"
    echo "  NEW_SSH_PORT            Port to use for SSH server"
    echo "  SERVER_NAME_FOR_CERT    Domain name for Let's Encrypt certificate setup"
    echo ""
    echo "Example:"
    echo "  NEW_USER=admin $(basename "$0")"
    echo "  $(basename "$0") --env-file .env"
}

# Парсинг аргументов
while [ "$#" -gt 0 ]; do
    case "$1" in
        --env-file)
            set -o allexport
            source $1
            set +o allexport
            shift
            ;;
        -h|--help)
            print_usage
            exit
            ;;
        *)
            echo "Unknown option: $1"
            print_usage
            exit 1
            ;;
    esac
done


# Установить sudo без пароля
sudo ./wheel-nopasswd

# Создать нового пользователя
if [[ -n "$NEW_USER" ]] && ! id "$NEW_USER" >/dev/null 2>&1; then
    sudo useradd -m -G wheel "$NEW_USER"
    echo "User '$NEW_USER' created"
    echo "Please run 'passwd $NEW_USER' to set a password"

    if [[ -n "$NEW_USER_SSH_KEY" ]]; then
        ssh_dir="/home/$NEW_USER/.ssh"
        sudo mkdir -p "$ssh_dir"
        echo "$NEW_USER_SSH_KEY" | sudo tee -a "$ssh_dir"/authorized_keys
        sudo chmod 700 "$ssh_dir"
        sudo chmod 600 "$ssh_dir"/authorized_keys
        sudo chown -R "$NEW_USER:$NEW_USER" "$ssh_dir"
        echo "SSH key added for user '$NEW_USER'"
    fi

    su "$NEW_USER"
fi

# Установить PS1
./change-ps1

# Установить новый hostname
if [[ -n "$NEW_HOSTNAME" ]]; then
    sudo hostnamectl set-hostname "$NEW_HOSTNAME"
    echo "Hostname changed to '$NEW_HOSTNAME'"
fi

# Установить новый SSH порт
if [[ -n "$NEW_SSH_PORT" ]]; then
    sudo ./change-ssh-port "$NEW_SSH_PORT"
    echo "SSH port changed to '$NEW_SSH_PORT'"
    sudo systemctl restart sshd
    echo "SSH service restarted"
    
    sudo firewall-cmd --permanent --service=ssh --remove-port=22/tcp
    echo "SSH port removed from firewall"
    sudo firewall-cmd --permanent --service=ssh --add-port="$NEW_SSH_PORT"/tcp
    echo "New SSH port added to firewall"
fi

# Подключение EPEL
if ! dnf repolist | grep -q epel; then
    sudo dnf config-manager --set-enabled crb
    sudo dnf install epel-release -y
fi

# Обновить систему
sudo dnf update -y

# Дать права ограничивать использование cpu
./enable-cpu-cpuset-limit

# Включить автоматический запуск сессии systemd
sudo loginctl enable-linger

# Установить и запустить certbot
if [[ -n "$SERVER_NAME_FOR_CERT" ]]; then
    sudo dnf install certbot nginx python3-certbot-nginx -y
    sudo sed -i "s/server_name  _/server_name  $SERVER_NAME_FOR_CERT/" /etc/nginx/nginx.conf
    sudo nginx -t
    sudo systemctl start nginx
    sudo certbot --nginx
fi

sudo systemctl enable --now firewalld